# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4d662b40-2626-4ab9-bee0-8f2a3e6dac17'
  imageRepository: 'springpetclinic'
  containerRegistry: 'gsspringbootcr.azurecr.io'
  registryName: 'gsSpringBootCR'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  azureSubscription: 'Azure subscription 1(63e6a2d7-6014-442b-8af9-f1ca1ec71b0e)'

stages:
# - stage: Build
#   displayName: Build and push stage
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)

#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)

- stage: Deploy
  displayName: Stage to deploy
  jobs:
    - deployment: VMDeploy
      displayName: Deploy to VM
      environment:
        name: ContosoDeploy
        resourceName: DESKTOP-BUGKGO7
        resourceType: virtualMachine
      strategy:
        runOnce:
          deploy:
            steps:
              - task: Docker@2
                inputs:
                  command: login
                  containerRegistry: $(registryName)
              - script: |
                  docker login -u gsSpringBootCR-p 9Sb9L4www+ZPz9bdLEQpmO436X2tQ6TQJJXvvVHFG4+ACRCMHdtQ gsspringbootcr.azurecr.io
                  docker pull gsspringbootcr.azurecr.io/springpetclinic:80
              - task: Bash@3
                inputs:
                  targetType: inline
                  script: |
                    docker pull $(containerRegistry)/$(imageRepository):$(tag)
              - task: AzureWebAppContainer@1
                displayName: Deploy to Azure Web App for Containers
                inputs:
                  azureSubscription: $(azureSubscription)
                  appName: 'spring-petclinic'
                  containers: '$(imageRepository):80'
